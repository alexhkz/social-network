{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileInfo/Profile.jsx","components/Profile/ProfileInfo/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","src","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","requiredField","MyPosts","React","memo","postsElements","posts","reverse","map","post","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,UAAY,iC,+LCcxEC,EAZF,SAACC,GACb,OACC,sBAAKC,UAAWC,IAAQC,KAAxB,UACC,qBAAKC,IAAI,yFAAyFC,IAAI,eACrGL,EAAMM,QACP,gCACC,yCADD,IACqBN,EAAMO,kBCFxBC,EAAcC,YAAiB,IAgBjCC,EAAsBC,YAAU,CAAEC,KAAM,yBAAlBD,EAdL,SAACX,GACrB,OACC,uBAAMa,SAAUb,EAAMc,aAAtB,UACC,8BACC,cAACC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWC,IAAUC,YAAa,eAC3DC,SAAU,CAACC,IAAeb,OAE5B,8BACC,sDA+BWc,EAvBCC,IAAMC,MAAK,SAACxB,GAC3B,IAAIyB,EACH,YAAIzB,EAAM0B,OACRC,UACAC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAMvB,QAASuB,EAAKvB,QAASC,WAAYsB,EAAKtB,gBAQ7D,OACC,sBAAKN,UAAWC,IAAQ4B,WAAxB,UACC,0CACA,cAACpB,EAAD,CAAqBG,SAPP,SAACkB,GAChB/B,EAAMgC,QAAQD,EAAOE,gBAOpB,qBAAKhC,UAAWC,IAAQwB,MAAxB,SACED,U,QCrBUS,EAFUC,aAfD,SAACC,GACxB,MAAO,CACNV,MAAOU,EAAMC,YAAYX,MACzBO,YAAaG,EAAMC,YAAYJ,gBAIN,SAACK,GAC3B,MAAO,CACNN,QAAS,SAACC,GACTK,EAASC,YAAqBN,QAKRE,CAA6Cb,G,mCCqBvDkB,EAtCgB,SAACxC,GAAW,IAAD,EAEXyC,oBAAS,GAFE,mBAEpCC,EAFoC,KAE1BC,EAF0B,OAGfF,mBAASzC,EAAM4C,QAHA,mBAGpCA,EAHoC,KAG5BC,EAH4B,KAKzCC,qBAAU,WACTD,EAAU7C,EAAM4C,UACd,CAAC5C,EAAM4C,SAeV,OACC,iCACGF,GACD,8BACC,uBAAMK,cAjBe,WACxBJ,GAAY,IAgBT,UAAyC3C,EAAM4C,QAAU,QAAzD,SAGDF,GACA,8BACC,uBAAOM,SAbY,SAACC,GACvBJ,EAAUI,EAAEC,cAAcC,QAYUC,OAlBV,WAC1BT,GAAY,GACZ3C,EAAMqD,aAAaT,IAgB6CU,WAAW,EAAMH,MAAOP,UCZ3EW,EAhBK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASZ,EAA2B,EAA3BA,OAAQS,EAAmB,EAAnBA,aAEvC,OAAKG,EAKJ,8BACC,sBAAKvD,UAAWC,IAAQuD,iBAAxB,UACC,qBAAKrD,IAAKoD,EAAQE,OAAOC,MAAOtD,IAAI,cACpC,cAAC,EAAD,CAAwBuC,OAAQA,EAAQS,aAAcA,SAPjD,cAACO,EAAA,EAAD,KCMMC,EAVC,SAAC7D,GAEhB,OACC,gCACC,cAAC,EAAD,CAAawD,QAASxD,EAAMwD,QAASZ,OAAQ5C,EAAM4C,OAAQS,aAAcrD,EAAMqD,eAC/E,cAAC,EAAD,Q,eCFGS,E,kLAGJ,IAAIC,EAASC,KAAKhE,MAAMiE,MAAMC,OAAOH,OAChCA,IACJA,EAASC,KAAKhE,MAAMmE,mBAEnBH,KAAKhE,MAAMoE,QAAQC,KAAK,UAG1BL,KAAKhE,MAAMsE,eAAeP,GAC1BC,KAAKhE,MAAMuE,UAAUR,K,+BAIrB,OACC,cAAC,EAAD,2BAAaC,KAAKhE,OAAlB,IACCwD,QAASQ,KAAKhE,MAAMwD,QACpBZ,OAAQoB,KAAKhE,MAAM4C,OACnBS,aAAcW,KAAKhE,MAAMqD,oB,GAnBE9B,IAAMiD,WA+BtBC,sBACdtC,aARqB,SAACC,GAAD,MAAY,CACjCoB,QAASpB,EAAMC,YAAYmB,QAC3BZ,OAAQR,EAAMC,YAAYO,OAC1BuB,iBAAkB/B,EAAMsC,KAAKX,OAC7BY,OAAQvC,EAAMsC,KAAKC,UAIM,CAAEL,mBAAgBC,cAAWlB,mBACtDuB,IAFcH,CAGbX","file":"static/js/3.18a5fa05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__36hcW\",\"posts\":\"MyPosts_posts__3OxEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1zuXR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3bszp\",\"mainImage\":\"ProfileInfo_mainImage__1SWpD\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.item}>\r\n\t\t\t<img src=\"https://image.freepik.com/free-vector/man-avatar-profile-on-round-icon_24640-14044.jpg\" alt=\"man-avatar\"></img>\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>likes</span> {props.likesCount}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport requiredField, { maxLengthCreator } from '../../../utils/Validators/Validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nlet AddNewPostForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field name='newPostText' component={Textarea} placeholder={'Post message'}\r\n\t\t\t\t\tvalidate={[requiredField, maxLength10]} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Add post</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\tlet postsElements =\r\n\t\t[...props.posts]\r\n\t\t\t.reverse()\r\n\t\t\t.map(post => <Post message={post.message} likesCount={post.likesCount} />);\r\n\r\n\tlet newPostElement = React.createRef();\r\n\r\n\tlet onAddPost = (values) => {\r\n\t\tprops.addPost(values.newPostText);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.postsBlock}>\r\n\t\t\t<h3>My posts</h3>\r\n\t\t\t<AddNewPostFormRedux onSubmit={onAddPost} />\r\n\t\t\t<div className={classes.posts}>\r\n\t\t\t\t{postsElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n});\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status]);\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t};\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status)\r\n\t};\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span onDoubleClick={activateEditMode} >{props.status || '-----'} </span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.descriptionBlock}>\r\n\t\t\t\t<img src={profile.photos.large} alt='ava-large' />\r\n\t\t\t\t<ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from '../MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../../Redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('/login');\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Profile {...this.props}\r\n\t\t\t\tprofile={this.props.profile}\r\n\t\t\t\tstatus={this.props.status}\r\n\t\t\t\tupdateStatus={this.props.updateStatus} />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n\twithRouter\r\n)(ProfileContainer);"],"sourceRoot":""}